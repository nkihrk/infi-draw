import { Injectable } from '@angular/core';
import { MemoryService } from './memory.service';
import { CleanupService } from '../module/cleanup.service';
import { DrawService } from '../module/draw.service';
import { EraseService } from '../module/erase.service';

@Injectable({
	providedIn: 'root'
})
export class FuncService {
	constructor(
		private memory: MemoryService,
		private cleanupFunc: CleanupService,
		private drawFunc: DrawService,
		private eraseFunc: EraseService
	) {}

	//////////////////////////////////////////////////////////
	//
	// Clean up
	//
	//////////////////////////////////////////////////////////

	cleanUp(): void {
		//this.cleanupFunc.activate();
	}

	//////////////////////////////////////////////////////////
	//
	// Draw
	//
	//////////////////////////////////////////////////////////

	draw(): void {
		this.drawFunc.activate();
	}

	//////////////////////////////////////////////////////////
	//
	// Erase
	//
	//////////////////////////////////////////////////////////

	erase(): void {
		this.eraseFunc.activate();
	}

	//////////////////////////////////////////////////////////
	//
	// Undo / redo
	//
	//////////////////////////////////////////////////////////

	undo(): void {
		this.memory.undo();
	}

	redo(): void {
		this.memory.redo();
	}

	//////////////////////////////////////////////////////////
	//
	// Hand
	//
	//////////////////////////////////////////////////////////

	hand(): void {
		this.memory.reservedByFunc = {
			name: 'hand',
			type: '',
			flgs: ['']
		};
	}

	//////////////////////////////////////////////////////////
	//
	// Save
	//
	//////////////////////////////////////////////////////////

	save(): void {}

	//////////////////////////////////////////////////////////
	//
	// Unload
	//
	//////////////////////////////////////////////////////////

	unload($e: any): void {
		if (this.memory.states.isChangedStates) {
			$e.returnValue = true;
		}
	}
}
